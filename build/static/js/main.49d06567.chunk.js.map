{"version":3,"sources":["registerServiceWorker.js","network/APIResponse.js","uiutils/MessageHandler.js","utils/ViewUtils.js","uiutils/MessageResponse.js","network/API.js","utils/DateUtils.js","components/ProductHuntToolbar.js","components/PostCard.js","components/ProductHuntList.js","components/HomePage.js","components/MyUpVotes.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","APIResponse","status","statusText","data","msgHandler","message","this","MessageHandler","props","context","showMessage","handleMsgDismiss","bind","setState","Alert","severity","messageResponse","onClose","AlertTitle","customView","React","Component","ViewUtils","createMessageHandler","msgResponse","createMsgHandlerCustomView","MessageResponse","SUCCESS","ERROR","INFO","WARNING","service","axios","create","baseURL","headers","interceptors","response","use","handleSuccess","handleError","apiResponse","setData","setStatus","setStatusText","undefined","localStorage","removeItem","config","Authorization","__isRetryRequest","request","setMessage","setMsgHandler","path","callbackSuccess","callbackError","get","post","DateUtils","convertUTCStringToFormattedDate","strDate","format","moment","Date","convertDateToFormattedDate","date","diffFromNow","fromNow","ProductHuntToolbar","isHomePage","pageName","classes","makeStyles","theme","appBar","marginBottom","toolbarButtons","marginLeft","menuButton","marginRight","spacing","useStyles","AppBar","position","className","Toolbar","variant","IconButton","edge","color","aria-label","to","Typography","aria-controls","Transition","forwardRef","ref","Slide","direction","PostCard","posts","isVotesList","card","maxWidth","cardTagline","height","media","paddingTop","expand","transform","transition","transitions","duration","shortest","expandOpen","expandComment","expandCommentOpen","avatar","backgroundColor","red","chip","margin","favRed","title","flex","progress","marginTop","inline","display","expandMore","childComment","createdAtChild","useState","expanded","setExpanded","expandedComment","setExpandedComment","page","setPage","commentsList","setCommentsList","loadMoreDisable","setLoadMoreDisable","loading","setLoading","handleExpandCommentClick","fetchCommentsList","postid","commentsCount","API","concat","comments","open","setOpen","handleClose","Card","CardMedia","image","thumbnail","image_url","media_type","CardHeader","Avatar","src","user","name","subheader","created_at","CardContent","component","tagline","CardActions","disableSpacing","onClick","event","id","current_user","voted_for_post","comments_count","disabled","votes_count","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","topics","map","topic","Chip","key","label","Dialog","fullScreen","TransitionComponent","CircularProgress","List","comment","ListItem","button","ListItemAvatar","alt","ListItemText","primary","body","secondary","Fragment","votes","maker","size","hunter","live_guest","child_comments_count","child_comments","Divider","Button","ProductHuntList","displayList","root","flexGrow","Grid","container","item","xs","sm","md","lg","xl","HomePage","postsList","selectedDate","isLoading","onDateChange","getAccessToken","daysParameter","currentComponent","Container","fixed","onChange","value","withRouter","MyUpVotes","votesList","getVotesForUser","userid","App","exact","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.49d06567.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default class APIResponse {\n    constructor(status, statusText, data, msgHandler, message) {\n      this.data = data;\n      this.msgHandler = msgHandler;\n      this.status = status;\n      this.statusText = statusText;\n      this.message = message;\n    }\n\n    setData(data) {\n      this.data = data;\n    } \n\n    setMsgHandler(msgHandler) {\n      this.msgHandler = msgHandler;\n    }\n\n    setStatus(status) {\n      this.status = status;\n    }\n\n    setStatusText(statusText) {\n      this.statusText = statusText;\n    }\n\n    setMessage(message) {\n      this.message = message;\n    }\n  }","import React from \"react\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nclass MessageHandler extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            showMessage: true,\n        }\n        this.handleMsgDismiss = this.handleMsgDismiss.bind(this);\n    }\n\n    handleMsgDismiss() {\n        this.setState({showMessage: false});\n    }\n\n    componentWillReceiveProps() {\n        this.setState({\n            showMessage: true\n        });\n    }\n\n    render() {\n        return(\n            <div>\n            {this.state.showMessage && \n                <Alert severity={this.props.messageResponse}\n                    onClose={this.handleMsgDismiss}>\n                    <AlertTitle>{this.props.message}</AlertTitle>\n                    {this.props.customView}\n                </Alert>}\n            </div>\n        );\n    }\n}\n\nexport default MessageHandler;","import React from \"react\";\nimport MessageHandler from '../uiutils/MessageHandler';\n\nexport const ViewUtils = {\n    createMessageHandler,\n    createMsgHandlerCustomView\n};\n\nfunction createMessageHandler(message, msgResponse) {\n    return <MessageHandler message={message} messageResponse={msgResponse}/>\n}\n\nfunction createMsgHandlerCustomView(message, msgResponse, customView) {\n    return <MessageHandler message={message} messageResponse={msgResponse} customView={customView} />\n}","const MessageResponse = {\n    SUCCESS: 'success',\n    ERROR: 'error',\n    INFO: 'info',\n    WARNING: 'warning'\n}\n\nexport default MessageResponse;","import axios from 'axios';\nimport APIResponse from '../network/APIResponse';\nimport { ViewUtils } from '../utils/ViewUtils';\nimport MessageResponse from '../uiutils/MessageResponse';\n\nclass API {\n  constructor() {\n    let service = axios.create({\n      baseURL: \"https://api.producthunt.com/v1/\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept':'application/json',\n        'Authorization': 'Bearer YR64Kx1ZG1Lw48g3YpkGrf_Eiru09iZXSVHOj_kr9VY'\n      }\n    });\n    service.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.service = service;\n  }\n\n  handleSuccess(response) {\n    let apiResponse = new APIResponse();\n    apiResponse.setData(response.data);\n    apiResponse.setStatus(response.status);\n    apiResponse.setStatusText(response.statusText);\n    return apiResponse;\n  }\n\n  handleError(error) {\n    let apiResponse = new APIResponse();\n    if (error.response !== undefined) {\n      switch (error.response.status) {\n        case 401:\n          localStorage.removeItem('authkey');\n              error.config.headers.Authorization = 'Bearer YR64Kx1ZG1Lw48g3YpkGrf_Eiru09iZXSVHOj_kr9VY';\n              error.config.__isRetryRequest = true;\n              return this.service.request(error.config)\n        default:\n          apiResponse.setStatus(error.response.status);\n          apiResponse.setStatusText(error.response.statusText);\n          return apiResponse;\n      }\n    }\n    apiResponse.setMessage(error.message);\n    apiResponse.setMsgHandler(ViewUtils.createMessageHandler(error.message, MessageResponse.ERROR));\n    return apiResponse;\n  }\n\n  get(path, callbackSuccess, callbackError) {\n    return this.service.get(path)\n    .then((response) => {\n      if (response.status === 200) {\n        callbackSuccess(response);\n      } else {\n        callbackError(response);\n      }\n    });\n  }\n\n  post(path, callbackSuccess, callbackError) {\n    return this.service.post(path)\n    .then((response) => {\n      if (response.status === 201) {\n        callbackSuccess(response);\n      } else {\n        callbackError(response);\n      }\n    });\n  }\n}\n\nexport default new API();\n","import moment from 'moment';\n\nexport const DateUtils = {\n    convertUTCStringToFormattedDate,\n    convertDateToFormattedDate,\n    diffFromNow\n};\n\nfunction convertUTCStringToFormattedDate(strDate, format) {\n    return moment(new Date(strDate)).format(format);\n}\n\nfunction convertDateToFormattedDate(date, format) {\n    return moment(date).format(format);\n}\n\nfunction diffFromNow(date) {\n    return moment(date).fromNow();\n}","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { Link } from \"react-router-dom\";\n\nfunction ProductHuntToolbar({isHomePage, pageName}) {\n    const useStyles = makeStyles(theme => ({\n        appBar: {\n            marginBottom: '1rem',\n        },\n        toolbarButtons: {\n            marginLeft: 'auto',\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n    }));\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\" className={classes.appBar}>\n            <Toolbar variant=\"regular\">\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    {isHomePage?<MenuIcon />:<Link to=\"/homepage\"><ArrowBackIcon/></Link>}\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\">{isHomePage?\"ProductHunt\":pageName}</Typography>\n                {isHomePage && <Link className={classes.toolbarButtons} to=\"myupvotes\"><FavoriteIcon aria-controls=\"menu-appbar\"></FavoriteIcon></Link>}\n            </Toolbar>\n        </AppBar>);\n}\n\nexport default ProductHuntToolbar;\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, IconButton, Card, Chip, CircularProgress } from \"@material-ui/core\";\nimport { red } from '@material-ui/core/colors';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { DateUtils } from \"../utils/DateUtils\";\nimport CommentIcon from '@material-ui/icons/Comment'\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport API from \"../network/API\";\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PostCard({ posts, isVotesList }) {\n    const useStyles = makeStyles(theme => ({\n        card: {\n            maxWidth: 345,\n        },\n        cardTagline: {\n            height: 40\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        expandComment: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandCommentOpen: {\n            transform: 'rotate(180deg)',\n        },\n        avatar: {\n            backgroundColor: red[500],\n        },\n        chip: {\n            margin: theme.spacing(0.5),\n        },\n        favRed: {\n            color: red[500],\n        },\n        appBar: {\n            position: 'relative',\n        },\n        title: {\n            marginLeft: theme.spacing(2),\n            flex: 1,\n        },\n        progress: {\n            marginLeft: '50%',\n            marginTop: theme.spacing(2)\n        },\n        inline: {\n            display: 'inline',\n        },\n        expandMore: {\n            marginLeft: 'auto'\n        },\n        childComment: {\n            marginLeft: theme.spacing(4),\n            marginTop: theme.spacing(2)\n        },\n        createdAtChild: {\n            marginRight: theme.spacing(2)\n        }\n    }));\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n    const [expandedComment, setExpandedComment] = React.useState(true);\n    const [page, setPage] = React.useState(1);\n    const [commentsList, setCommentsList] = React.useState([]);\n    const [loadMoreDisable, setLoadMoreDisable] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    const handleExpandCommentClick = () => {\n        setExpandedComment(!expandedComment);\n    };\n    const handleFavClick = (postid) => {\n\n        API.post('posts/' + postid + \"/vote\", (response) => {\n        },\n        (error) => {\n        });\n    }\n\n    const fetchCommentsList = (postid, commentsCount) => {\n        setLoading(true);\n        setPage(page + 1);\n        if ((page * 5) > (commentsCount + 4) / 5 * 5) {\n            setLoading(false);\n            setLoadMoreDisable(true);\n        } else {\n            API.get('posts/' + postid + '/comments?&page=' + page + '&per_page=5&order=desc', (response) => {\n                setLoading(false);\n                setCommentsList(commentsList.concat(response.data.comments));\n            },\n                (error) => {\n                    setLoading(false);\n                    console.log(error);\n                });\n        }\n    }\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = (postid, commentsCount) => {\n        setOpen(true);\n        setPage(1);\n        fetchCommentsList(posts.id, commentsCount);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Card className={classes.card}>\n                <CardMedia\n                    className={classes.media}\n                    image={posts.thumbnail.image_url}\n                    title={posts.thumbnail.media_type}\n                />\n                <CardHeader\n                    avatar={\n                        <Avatar aria-label=\"recipe\" className={classes.avatar} src={posts.user.image_url[\"30px\"]} />\n                    }\n                    title={posts.name}\n                    subheader={\"Created At \" + DateUtils.convertUTCStringToFormattedDate(posts.created_at, \"HH:mm:ss\")}\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" className={classes.cardTagline} component=\"p\">\n                        {posts.tagline}\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                    {!isVotesList && <IconButton aria-label=\"add to favorites\" onClick={(event) => handleFavClick(posts.id)} >\n                        {posts.current_user.voted_for_post && <FavoriteIcon className={classes.favRed} />}\n                        {!posts.current_user.voted_for_post && <FavoriteIcon />}\n                    </IconButton>}\n                    <IconButton aria-label=\"share\" onClick={(event) => handleClickOpen(posts.id, posts.comments_count)}>\n                        <CommentIcon /><Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            &nbsp;{posts.comments_count}\n                        </Typography>\n                    </IconButton>\n                    <IconButton aria-label=\"share\" disabled>\n                        <ThumbUpIcon /><Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">&nbsp;{posts.votes_count}\n                        </Typography>\n                    </IconButton>\n                    <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: expanded,\n                        })}\n                        onClick={handleExpandClick}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                    >\n                        <ExpandMoreIcon />\n                    </IconButton>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                        {posts.topics.map(topic => {\n                            return (\n                                <Chip\n                                    key={topic.id}\n                                    label={topic.name}\n                                    className={classes.chip}\n                                />\n                            );\n                        })}\n                    </CardContent>\n                </Collapse>\n            </Card>\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Comments\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                {loading && <CircularProgress className={classes.progress} />}\n                <List>\n                    {commentsList.map(comment => {\n                        return (\n                            <div>\n                                <ListItem button key={comment.id}>\n                                    <ListItemAvatar>\n                                        <Avatar alt=\"Remy Sharp\" src={comment.user.image_url[\"30px\"]} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={comment.body}\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    color=\"textPrimary\"\n                                                    className={classes.createdAtChild}\n                                                >\n                                                    {DateUtils.diffFromNow(comment.created_at) + \" ---- \" + comment.user.name}\n                                                </Typography>\n                                                {comment.votes > 0 && <IconButton aria-label=\"share\" disabled>\n                                                    <ThumbUpIcon /><Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">&nbsp;{comment.votes}\n                                                    </Typography>\n                                                </IconButton>}\n                                                {comment.maker && <Chip\n                                                    key={comment.id}\n                                                    label={\"Maker\"}\n                                                    size=\"small\"\n                                                    className={classes.chip}\n                                                />}\n                                                {comment.hunter && <Chip\n                                                    key={comment.id}\n                                                    label={\"Hunter\"}\n                                                    size=\"small\"\n                                                    className={classes.chip}\n                                                />}\n                                                {comment.live_guest && <Chip\n                                                    key={comment.id}\n                                                    size=\"small\"\n                                                    label={\"Live Guest\"}\n                                                    className={classes.chip}\n                                                />}\n                                                {comment.child_comments_count > 0 && <IconButton\n                                                    className={clsx(classes.expandComment, {\n                                                        [classes.expandCommentOpen]: expandedComment,\n                                                    })}\n                                                    onClick={handleExpandCommentClick}\n                                                    aria-expanded={expandedComment}\n                                                    aria-label=\"show more\"\n                                                >\n                                                    <ExpandMoreIcon />\n                                                </IconButton>}\n\n                                                <Collapse in={expandedComment} timeout=\"auto\" unmountOnExit>\n                                                    {comment.child_comments_count > 0 && comment.child_comments.map(childComment => {\n                                                        return (\n                                                            <div className={classes.childComment}>\n                                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                                    {childComment.body}\n                                                                </Typography>\n                                                                <Typography\n                                                                    className={classes.createdAtChild}\n                                                                    component=\"span\"\n                                                                    variant=\"body2\"\n                                                                    color=\"textPrimary\"\n                                                                >\n                                                                    {DateUtils.diffFromNow(childComment.created_at) + \" ---- \" + childComment.user.name}\n                                                                </Typography>\n                                                                {childComment.maker && <Chip\n                                                                    key={childComment.id}\n                                                                    label={\"Maker\"}\n                                                                    size=\"small\"\n                                                                    className={classes.chip}\n                                                                />}\n                                                                {!childComment.hunter && <Chip\n                                                                    key={childComment.id}\n                                                                    label={\"Hunter\"}\n                                                                    size=\"small\"\n                                                                    className={classes.chip}\n                                                                />}\n                                                                {childComment.live_guest && <Chip\n                                                                    key={childComment.id}\n                                                                    size=\"small\"\n                                                                    label={\"Live Guest\"}\n                                                                    className={classes.chip}\n                                                                />}\n                                                            </div>\n                                                        );\n                                                    })}\n\n                                                </Collapse>\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                                <Divider />\n                            </div>\n                        );\n                    })}\n                </List>\n                {!loadMoreDisable && !loading &&\n                    <Button size=\"medium\" color=\"primary\" onClick={(event) => fetchCommentsList(posts.id, posts.comments_count)}>\n                        Load More\n                </Button>}\n            </Dialog></div>\n    );\n\n}\n\nexport default PostCard;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from \"@material-ui/core\";\nimport PostCard from \"./PostCard\";\n\nfunction ProductHuntList({ displayList, isVotesList }) {\n    const useStyles = makeStyles(theme => ({\n      root: {\n        flexGrow: 1,\n        marginTop: theme.spacing(1)\n      }\n    }));\n  \n    const classes = useStyles();\n  \n    return (\n      <div className={classes.root}>\n        <Grid container spacing={10}>\n          {\n            displayList.map(posts => (\n              <Grid item xs={12} sm={6} md={4} lg={4} xl={3} key={posts.id}>\n                <PostCard posts={isVotesList?posts.post:posts} isVotesList={isVotesList} />\n              </Grid>\n            ))\n          }\n        </Grid></div>\n    );\n  }\n  \nexport default ProductHuntList;","import React  from \"react\";\nimport API from \"../network/API\";\nimport {withRouter } from \"react-router-dom\"\nimport { Container, CircularProgress } from \"@material-ui/core\";\nimport { DateUtils } from \"../utils/DateUtils\";\nimport DatePicker from 'react-date-picker';\nimport ProductHuntToolbar from \"./ProductHuntToolbar\";\nimport ProductHuntList from  \"./ProductHuntList\";\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      msgHandler: null,\n      postsList: [],\n      selectedDate: new Date(),\n      isLoading: false\n    };\n    this.onDateChange = this.onDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAccessToken(\"\");\n  }\n\n  getAccessToken(daysParameter) {\n    let currentComponent = this;\n    currentComponent.setState({isLoading: true, postsList: [], msgHandler:null});\n    API.get('posts' + daysParameter, (response) => {\n      currentComponent.setState({\n        postsList: response.data.posts,\n        isLoading: false\n      });\n    },\n      (error) => {\n        currentComponent.setState({\n          msgHandler: error.msgHandler,\n          isLoading: false\n        })\n      });\n  }\n\n  onDateChange(date) {\n    let currentComponent = this;\n    currentComponent.setState({ selectedDate: date });\n    currentComponent.getAccessToken( \"?day=\" + DateUtils.convertDateToFormattedDate(date, \"YYYY-MM-DD\"));\n  } \n\n  render() {\n    return (\n      <React.Fragment>\n        <Container fixed>\n          <ProductHuntToolbar isHomePage={true} pageName={\"ProductHunt\"}></ProductHuntToolbar>\n          {this.state.msgHandler}\n          <div className=\"right-align\"><DatePicker onChange={this.onDateChange} value={this.state.selectedDate} /></div>\n          {this.state.isLoading && <CircularProgress className=\"progress\" />}\n          <ProductHuntList displayList={this.state.postsList} />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(HomePage);","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container, CircularProgress } from \"@material-ui/core\";\nimport API from \"../network/API\";\nimport ProductHuntList from \"./ProductHuntList\";\nimport ProductHuntToolbar from \"./ProductHuntToolbar\";\n\nclass MyUpVotes extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        msgHandler: null,\n        votesList: [],\n        isLoading: false\n      };\n    }\n  \n    componentDidMount() {\n      this.getVotesForUser(\"2352271\");\n    }\n  \n    getVotesForUser(userid) {\n      let currentComponent = this;\n      currentComponent.setState({isLoading: true, postsList: [], msgHandler:null});\n      API.get('users/' + userid + '/votes', (response) => {\n        currentComponent.setState({\n          votesList: response.data.votes,\n          isLoading: false\n        });\n      },\n        (error) => {\n          currentComponent.setState({\n            msgHandler: error.msgHandler,\n            isLoading: false\n          })\n        });\n    }\n  \n    render() {\n      return (\n        <React.Fragment>\n          <Container fixed>\n            <ProductHuntToolbar isHomePage={false} pageName={\"My UpVotes\"}></ProductHuntToolbar>\n            {this.state.msgHandler}\n            {this.state.isLoading && <CircularProgress className=\"progress\" />}\n            <ProductHuntList displayList={this.state.votesList} isVotesList={true}></ProductHuntList>\n          </Container>\n        </React.Fragment>\n      );\n    }\n  }\n  \n  export default withRouter(MyUpVotes);","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { HomePage, MyUpVotes } from \"./components\";\nimport { BrowserRouter } from 'react-router-dom';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path='/' component={HomePage}></Route>\n                    <Route exact path='/homepage' component={HomePage}></Route>\n                    <Route exact path='/myupvotes' component={MyUpVotes}></Route>\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from \"./App\";\n\nReactDOM.render(<App /> , document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}