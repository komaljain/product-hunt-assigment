{"version":3,"sources":["registerServiceWorker.js","network/APIResponse.js","uiutils/MessageHandler.js","utils/ViewUtils.js","uiutils/MessageResponse.js","network/API.js","utils/DateUtils.js","components/ProductHuntToolbar.js","components/PostCard.js","components/ProductHuntList.js","components/HomePage.js","components/MyUpVotes.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","APIResponse","status","statusText","data","msgHandler","message","this","MessageHandler","props","context","showMessage","handleMsgDismiss","bind","setState","Alert","severity","messageResponse","onClose","AlertTitle","customView","React","Component","ViewUtils","createMessageHandler","msgResponse","createMsgHandlerCustomView","MessageResponse","SUCCESS","ERROR","INFO","WARNING","service","axios","create","baseURL","headers","interceptors","response","use","handleSuccess","handleError","apiResponse","setData","setStatus","setStatusText","undefined","localStorage","removeItem","config","Authorization","__isRetryRequest","request","setMessage","setMsgHandler","path","callbackSuccess","callbackError","get","post","DateUtils","convertUTCStringToFormattedDate","strDate","format","moment","Date","convertDateToFormattedDate","date","ProductHuntToolbar","isHomePage","pageName","classes","makeStyles","theme","appBar","marginBottom","toolbarButtons","marginLeft","menuButton","marginRight","spacing","useStyles","AppBar","position","className","Toolbar","variant","IconButton","edge","color","aria-label","to","Typography","aria-controls","PostCard","posts","isVotesList","card","maxWidth","cardTagline","height","media","paddingTop","expand","transform","transition","transitions","duration","shortest","expandOpen","avatar","backgroundColor","red","chip","margin","favRed","useState","expanded","setExpanded","Card","CardMedia","image","thumbnail","image_url","title","media_type","CardHeader","Avatar","src","user","name","subheader","created_at","CardContent","component","tagline","CardActions","disableSpacing","onClick","event","postid","id","API","current_user","voted_for_post","disabled","comments_count","votes_count","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","Box","p","topics","map","topic","Chip","key","label","ProductHuntList","displayList","root","flexGrow","marginTop","Grid","container","item","xs","HomePage","postsList","selectedDate","isLoading","onDateChange","getAccessToken","daysParameter","currentComponent","Fragment","Container","fixed","onChange","value","CircularProgress","withRouter","MyUpVotes","votesList","getVotesForUser","userid","JSON","stringify","votes","App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bc0987a1.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default class APIResponse {\n    constructor(status, statusText, data, msgHandler, message) {\n      this.data = data;\n      this.msgHandler = msgHandler;\n      this.status = status;\n      this.statusText = statusText;\n      this.message = message;\n    }\n\n    setData(data) {\n      this.data = data;\n    } \n\n    setMsgHandler(msgHandler) {\n      this.msgHandler = msgHandler;\n    }\n\n    setStatus(status) {\n      this.status = status;\n    }\n\n    setStatusText(statusText) {\n      this.statusText = statusText;\n    }\n\n    setMessage(message) {\n      this.message = message;\n    }\n  }","import React from \"react\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nclass MessageHandler extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            showMessage: true,\n        }\n        this.handleMsgDismiss = this.handleMsgDismiss.bind(this);\n    }\n\n    handleMsgDismiss() {\n        this.setState({showMessage: false});\n    }\n\n    componentWillReceiveProps() {\n        this.setState({\n            showMessage: true\n        });\n    }\n\n    render() {\n        return(\n            <div>\n            {this.state.showMessage && \n                <Alert severity={this.props.messageResponse}\n                    onClose={this.handleMsgDismiss}>\n                    <AlertTitle>{this.props.message}</AlertTitle>\n                    {this.props.customView}\n                </Alert>}\n            </div>\n        );\n    }\n}\n\nexport default MessageHandler;","import React from \"react\";\nimport MessageHandler from '../uiutils/MessageHandler';\n\nexport const ViewUtils = {\n    createMessageHandler,\n    createMsgHandlerCustomView\n};\n\nfunction createMessageHandler(message, msgResponse) {\n    return <MessageHandler message={message} messageResponse={msgResponse}/>\n}\n\nfunction createMsgHandlerCustomView(message, msgResponse, customView) {\n    return <MessageHandler message={message} messageResponse={msgResponse} customView={customView} />\n}","const MessageResponse = {\n    SUCCESS: 'success',\n    ERROR: 'error',\n    INFO: 'info',\n    WARNING: 'warning'\n}\n\nexport default MessageResponse;","import axios from 'axios';\nimport APIResponse from '../network/APIResponse';\nimport { ViewUtils } from '../utils/ViewUtils';\nimport MessageResponse from '../uiutils/MessageResponse';\n\nclass API {\n  constructor() {\n    let service = axios.create({\n      baseURL: \"https://api.producthunt.com/v1/\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept':'application/json',\n        'Authorization': 'Bearer YR64Kx1ZG1Lw48g3YpkGrf_Eiru09iZXSVHOj_kr9VY'\n      }\n    });\n    service.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.service = service;\n  }\n\n  handleSuccess(response) {\n    let apiResponse = new APIResponse();\n    apiResponse.setData(response.data);\n    apiResponse.setStatus(response.status);\n    apiResponse.setStatusText(response.statusText);\n    return apiResponse;\n  }\n\n  handleError(error) {\n    let apiResponse = new APIResponse();\n    if (error.response !== undefined) {\n      switch (error.response.status) {\n        case 401:\n          localStorage.removeItem('authkey');\n              error.config.headers.Authorization = 'Bearer YR64Kx1ZG1Lw48g3YpkGrf_Eiru09iZXSVHOj_kr9VY';\n              error.config.__isRetryRequest = true;\n              return this.service.request(error.config)\n        default:\n          apiResponse.setStatus(error.response.status);\n          apiResponse.setStatusText(error.response.statusText);\n          return apiResponse;\n      }\n    }\n    apiResponse.setMessage(error.message);\n    apiResponse.setMsgHandler(ViewUtils.createMessageHandler(error.message, MessageResponse.ERROR));\n    return apiResponse;\n  }\n\n  get(path, callbackSuccess, callbackError) {\n    return this.service.get(path)\n    .then((response) => {\n      if (response.status === 200) {\n        callbackSuccess(response);\n      } else {\n        callbackError(response);\n      }\n    });\n  }\n\n  post(path, callbackSuccess, callbackError) {\n    return this.service.post(path)\n    .then((response) => {\n      if (response.status === 201) {\n        callbackSuccess(response);\n      } else {\n        callbackError(response);\n      }\n    });\n  }\n}\n\nexport default new API();\n","import moment from 'moment';\n\nexport const DateUtils = {\n    convertUTCStringToFormattedDate,\n    convertDateToFormattedDate\n};\n\nfunction convertUTCStringToFormattedDate(strDate, format) {\n    return moment(new Date(strDate)).format(format);\n}\n\nfunction convertDateToFormattedDate(date, format) {\n    return moment(date).format(format);\n}","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { Link } from \"react-router-dom\";\n\nfunction ProductHuntToolbar({isHomePage, pageName}) {\n    const useStyles = makeStyles(theme => ({\n        appBar: {\n            marginBottom: '1rem',\n        },\n        toolbarButtons: {\n            marginLeft: 'auto',\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n    }));\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\" className={classes.appBar}>\n            <Toolbar variant=\"regular\">\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    {isHomePage?<MenuIcon />:<Link to=\"/homepage\"><ArrowBackIcon/></Link>}\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\">{isHomePage?\"ProductHunt\":pageName}</Typography>\n                {isHomePage && <Link className={classes.toolbarButtons} to=\"myupvotes\"><FavoriteIcon aria-controls=\"menu-appbar\"></FavoriteIcon></Link>}\n            </Toolbar>\n        </AppBar>);\n}\n\nexport default ProductHuntToolbar;\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, IconButton, Box, Card, Chip } from \"@material-ui/core\";\nimport { red } from '@material-ui/core/colors';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { DateUtils } from \"../utils/DateUtils\";\nimport CommentIcon from '@material-ui/icons/Comment'\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport API from \"../network/API\";\n\n\nfunction PostCard({ posts, isVotesList }) {\n    const useStyles = makeStyles(theme => ({\n      card: {\n        maxWidth: 345,\n      },\n      cardTagline: {\n        height: 40\n      },\n      media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n      },\n      expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      expandOpen: {\n        transform: 'rotate(180deg)',\n      },\n      avatar: {\n        backgroundColor: red[500],\n      },\n      chip: {\n        margin: theme.spacing(0.5),\n      },\n      favRed: {\n        color: red[500],\n      }\n    }));\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n\n    const handleFavClick = (postid) => {\n        API.post('posts/' + postid + \"/vote\",  (response) => {\n            },\n            (error) => {\n            });\n    }\n\n    return (\n      <Card className={classes.card}>\n        <CardMedia\n          className={classes.media}\n          image={posts.thumbnail.image_url}\n          title={posts.thumbnail.media_type}\n        />\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar} src={posts.user.image_url[\"30px\"]} />\n          }\n          title={posts.name}\n          subheader={\"Created At \" + DateUtils.convertUTCStringToFormattedDate(posts.created_at, \"HH:mm:ss\")}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" className={classes.cardTagline} component=\"p\">\n            {posts.tagline}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          {!isVotesList && <IconButton aria-label=\"add to favorites\"  onClick={(event)=>handleFavClick(posts.id)} >\n            {posts.current_user.voted_for_post && <FavoriteIcon className={classes.favRed}  />}\n            {!posts.current_user.voted_for_post && <FavoriteIcon/>}\n          </IconButton>}\n          <IconButton aria-label=\"share\" disabled>\n             <CommentIcon/><Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              &nbsp;{posts.comments_count}\n            </Typography>\n          </IconButton>\n          <IconButton aria-label=\"share\" disabled>\n              <ThumbUpIcon/><Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">&nbsp;{posts.votes_count}\n            </Typography>\n          </IconButton>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Box p={1}></Box>\n            {posts.topics.map(topic => {\n              return (\n                <Chip\n                  key={topic.id}\n                  label={topic.name}\n                  className={classes.chip}\n                />\n              );\n            })}\n          </CardContent>\n        </Collapse>\n      </Card>\n    );\n  \n  }\n  \n  export default PostCard;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from \"@material-ui/core\";\nimport PostCard from \"./PostCard\";\n\nfunction ProductHuntList({ displayList, isVotesList }) {\n    const useStyles = makeStyles(theme => ({\n      root: {\n        flexGrow: 1,\n        marginTop: theme.spacing(1)\n      }\n    }));\n  \n    const classes = useStyles();\n  \n    return (\n      <div className={classes.root}>\n        <Grid container spacing={10}>\n          {\n            displayList.map(posts => (\n              <Grid item xs={4} key={posts.id}>\n                <PostCard posts={isVotesList?posts.post:posts} isVotesList={isVotesList} />\n              </Grid>\n            ))\n          }\n        </Grid></div>\n    );\n  }\n  \nexport default ProductHuntList;","import React  from \"react\";\nimport API from \"../network/API\";\nimport {withRouter } from \"react-router-dom\"\nimport { Container, CircularProgress } from \"@material-ui/core\";\nimport { DateUtils } from \"../utils/DateUtils\";\nimport DatePicker from 'react-date-picker';\nimport ProductHuntToolbar from \"./ProductHuntToolbar\";\nimport ProductHuntList from  \"./ProductHuntList\";\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      msgHandler: null,\n      postsList: [],\n      selectedDate: new Date(),\n      isLoading: false\n    };\n    this.onDateChange = this.onDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAccessToken(\"\");\n  }\n\n  getAccessToken(daysParameter) {\n    let currentComponent = this;\n    currentComponent.setState({isLoading: true, postsList: [], msgHandler:null});\n    API.get('posts' + daysParameter, (response) => {\n      currentComponent.setState({\n        postsList: response.data.posts,\n        isLoading: false\n      });\n    },\n      (error) => {\n        currentComponent.setState({\n          msgHandler: error.msgHandler,\n          isLoading: false\n        })\n      });\n  }\n\n  onDateChange(date) {\n    let currentComponent = this;\n    currentComponent.setState({ selectedDate: date });\n    currentComponent.getAccessToken( \"?day=\" + DateUtils.convertDateToFormattedDate(date, \"YYYY-MM-DD\"));\n  } \n\n  render() {\n    return (\n      <React.Fragment>\n        <Container fixed>\n          <ProductHuntToolbar isHomePage={true} pageName={\"ProductHunt\"}></ProductHuntToolbar>\n          {this.state.msgHandler}\n          <div className=\"right-align\"><DatePicker onChange={this.onDateChange} value={this.state.selectedDate} /></div>\n          {this.state.isLoading && <CircularProgress />}\n          <ProductHuntList displayList={this.state.postsList} />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(HomePage);","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container, CircularProgress } from \"@material-ui/core\";\nimport API from \"../network/API\";\nimport ProductHuntList from \"./ProductHuntList\";\nimport ProductHuntToolbar from \"./ProductHuntToolbar\";\n\nclass MyUpVotes extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        msgHandler: null,\n        votesList: [],\n        isLoading: false\n      };\n    }\n  \n    componentDidMount() {\n      this.getVotesForUser(\"2352271\");\n    }\n  \n    getVotesForUser(userid) {\n      let currentComponent = this;\n      currentComponent.setState({isLoading: true, postsList: [], msgHandler:null});\n      API.get('users/' + userid + '/votes', (response) => {\n          console.log(\"votes:\" + JSON.stringify(response.data));\n        currentComponent.setState({\n          votesList: response.data.votes,\n          isLoading: false\n        });\n      },\n        (error) => {\n          currentComponent.setState({\n            msgHandler: error.msgHandler,\n            isLoading: false\n          })\n        });\n    }\n  \n    render() {\n      return (\n        <React.Fragment>\n          <Container fixed>\n            <ProductHuntToolbar isHomePage={false} pageName={\"My UpVotes\"}></ProductHuntToolbar>\n            {this.state.msgHandler}\n            {this.state.isLoading && <CircularProgress />}\n            <ProductHuntList displayList={this.state.votesList} isVotesList={true}></ProductHuntList>\n          </Container>\n        </React.Fragment>\n      );\n    }\n  }\n  \n  export default withRouter(MyUpVotes);","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { HomePage, MyUpVotes } from \"./components\";\nimport { BrowserRouter } from 'react-router-dom';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path='/index.html' component={HomePage}></Route>\n                    <Route path='/homepage' component={HomePage}></Route>\n                    <Route path='/myupvotes' component={MyUpVotes}></Route>\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from \"./App\";\n\nReactDOM.render(<App /> , document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}